{"version":3,"sources":["static/staticData.js","service/MainService.js","utils/Utility.js","components/Navbar.js","components/CountryPopup.js","components/Card.js","components/PageContent.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["countryList","value","label","Map","Array","getCoordinates","countryCode","a","fetch","result","json","country","Lon","Lat","coordinates","response","countryResult","Country","length","Cases","Date","finalResult","getCurrentDate","date","day","getDate","month","String","getMonth","year","getFullYear","seconds","getSeconds","toString","minutes","getMinutes","hours","getHours","Navbar","props","state","searchbarArr","currentDate","handleSearch","bind","resultClick","event","document","getElementsByName","title","scrollIntoView","behavior","getElementById","innerHTML","totalResult","searchbar","container","createElement","id","style","position","width","display","zIndex","remove","tableElement","this","element","toLowerCase","includes","target","tableRow","tableData","Math","ceil","random","textContent","onclick","appendChild","after","className","type","placeholder","onChange","then","res","countryCodes","Countries","forEach","push","CountryCode","availableCountries","countryObject","console","log","countriesData","isArrived","setInterval","undefined","tempArr","setState","clearInterval","getCountriesFunc","updateDate","React","Component","CountryPopup","mapFunc","handlePopupContainerClick","onClick","data","toUpperCase","con","ymaps","load","maps","center","zoom","catch","error","CardComponent","_isMounted","currentCountryCode","popupData","Log","handleCardClick","resetCurrentCountryCode","persist","parentElement","getAttribute","getSummaryByCountry","styleCard","lastArray","cardType","map","x","flagClassName","cnt","Card","key","name","Content","Header","NewConfirmed","Description","textAlign","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","substring","row","Grid","Row","Column","slice","min","columns","PageContent","globalData","datas","Container","summaryData","incoming","Page","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.54b24cb2.chunk.js","sourcesContent":["const apiKey = \"trnsl.1.1.20200405T192120Z.7a6dd378098e581e.f999c8bf23f873eda464b276367143f92cf10ff2\"\r\nconst lang = \"tr\"\r\nconst translateApiEndpoint = `https://translate.yandex.net/api/v1.5/tr.json/translate?key=${apiKey}&lang=${lang}&text=`\r\n\r\nexport const countryList =  [\r\n\t{ value: 'TR', label: 'Türkiye' },\r\n\t{ value: 'VI', label: 'ABD Virgin Adaları' },\r\n\t{ value: 'AF', label: 'Afganistan' },\r\n\t{ value: 'AX', label: 'Aland Adaları' },\r\n\t{ value: 'DE', label: 'Almanya' },\r\n\t{ value: 'US', label: 'Amerika Birleşik Devletleri' },\r\n\t{ value: 'UM', label: 'Amerika Birleşik Devletleri Küçük Dış Adaları' },\r\n\t{ value: 'AS', label: 'Amerikan Samoası' },\r\n\t{ value: 'AD', label: 'Andora' },\r\n\t{ value: 'AO', label: 'Angola' },\r\n\t{ value: 'AI', label: 'Anguilla' },\r\n\t{ value: 'AQ', label: 'Antarktika' },\r\n\t{ value: 'AG', label: 'Antigua ve Barbuda' },\r\n\t{ value: 'AR', label: 'Arjantin' },\r\n\t{ value: 'AL', label: 'Arnavutluk' },\r\n\t{ value: 'AW', label: 'Aruba' },\r\n\t{ value: 'QU', label: 'Avrupa Birliği' },\r\n\t{ value: 'AU', label: 'Avustralya' },\r\n\t{ value: 'AT', label: 'Avusturya' },\r\n\t{ value: 'AZ', label: 'Azerbaycan' },\r\n\t{ value: 'BS', label: 'Bahamalar' },\r\n\t{ value: 'BH', label: 'Bahreyn' },\r\n\t{ value: 'BD', label: 'Bangladeş' },\r\n\t{ value: 'BB', label: 'Barbados' },\r\n\t{ value: 'EH', label: 'Batı Sahara' },\r\n\t{ value: 'BZ', label: 'Belize' },\r\n\t{ value: 'BE', label: 'Belçika' },\r\n\t{ value: 'BJ', label: 'Benin' },\r\n\t{ value: 'BM', label: 'Bermuda' },\r\n\t{ value: 'BY', label: 'Beyaz Rusya' },\r\n\t{ value: 'BT', label: 'Bhutan' },\r\n\t{ value: 'ZZ', label: 'Bilinmeyen veya Geçersiz Bölge' },\r\n\t{ value: 'AE', label: 'Birleşik Arap Emirlikleri' },\r\n\t{ value: 'GB', label: 'Birleşik Krallık' },\r\n\t{ value: 'BO', label: 'Bolivya' },\r\n\t{ value: 'BA', label: 'Bosna Hersek' },\r\n\t{ value: 'BW', label: 'Botsvana' },\r\n\t{ value: 'BV', label: 'Bouvet Adası' },\r\n\t{ value: 'BR', label: 'Brezilya' },\r\n\t{ value: 'BN', label: 'Brunei' },\r\n\t{ value: 'BG', label: 'Bulgaristan' },\r\n\t{ value: 'BF', label: 'Burkina Faso' },\r\n\t{ value: 'BI', label: 'Burundi' },\r\n\t{ value: 'CV', label: 'Cape Verde' },\r\n\t{ value: 'GI', label: 'Cebelitarık' },\r\n\t{ value: 'DZ', label: 'Cezayir' },\r\n\t{ value: 'CX', label: 'Christmas Adası' },\r\n\t{ value: 'DJ', label: 'Cibuti' },\r\n\t{ value: 'CC', label: 'Cocos Adaları' },\r\n\t{ value: 'CK', label: 'Cook Adaları' },\r\n\t{ value: 'TD', label: 'Çad' },\r\n\t{ value: 'CZ', label: 'Çek Cumhuriyeti' },\r\n\t{ value: 'CN', label: 'Çin' },\r\n\t{ value: 'DK', label: 'Danimarka' },\r\n\t{ value: 'DM', label: 'Dominik' },\r\n\t{ value: 'DO', label: 'Dominik Cumhuriyeti' },\r\n\t{ value: 'TL', label: 'Doğu Timor' },\r\n\t{ value: 'EC', label: 'Ekvator' },\r\n\t{ value: 'GQ', label: 'Ekvator Ginesi' },\r\n\t{ value: 'SV', label: 'El Salvador' },\r\n\t{ value: 'ID', label: 'Endonezya' },\r\n\t{ value: 'ER', label: 'Eritre' },\r\n\t{ value: 'AM', label: 'Ermenistan' },\r\n\t{ value: 'EE', label: 'Estonya' },\r\n\t{ value: 'ET', label: 'Etiyopya' },\r\n\t{ value: 'FK', label: 'Falkland Adaları (Malvinalar)' },\r\n\t{ value: 'FO', label: 'Faroe Adaları' },\r\n\t{ value: 'MA', label: 'Fas' },\r\n\t{ value: 'FJ', label: 'Fiji' },\r\n\t{ value: 'CI', label: 'Fildişi Sahilleri' },\r\n\t{ value: 'PH', label: 'Filipinler' },\r\n\t{ value: 'PS', label: 'Filistin Bölgesi' },\r\n\t{ value: 'FI', label: 'Finlandiya' },\r\n\t{ value: 'FR', label: 'Fransa' },\r\n\t{ value: 'GF', label: 'Fransız Guyanası' },\r\n\t{ value: 'TF', label: 'Fransız Güney Bölgeleri' },\r\n\t{ value: 'PF', label: 'Fransız Polinezyası' },\r\n\t{ value: 'GA', label: 'Gabon' },\r\n\t{ value: 'GM', label: 'Gambia' },\r\n\t{ value: 'GH', label: 'Gana' },\r\n\t{ value: 'GN', label: 'Gine' },\r\n\t{ value: 'GW', label: 'Gine-Bissau' },\r\n\t{ value: 'GD', label: 'Granada' },\r\n\t{ value: 'GL', label: 'Grönland' },\r\n\t{ value: 'GP', label: 'Guadeloupe' },\r\n\t{ value: 'GU', label: 'Guam' },\r\n\t{ value: 'GT', label: 'Guatemala' },\r\n\t{ value: 'GG', label: 'Guernsey' },\r\n\t{ value: 'GY', label: 'Guyana' },\r\n\t{ value: 'ZA', label: 'Güney Afrika' },\r\n\t{ value: 'GS', label: 'Güney Georgia ve Güney Sandwich Adaları' },\r\n\t{ value: 'KR', label: 'Güney Kore' },\r\n\t{ value: 'CY', label: 'Güney Kıbrıs Rum Kesimi' },\r\n\t{ value: 'GE', label: 'Gürcistan' },\r\n\t{ value: 'HT', label: 'Haiti' },\r\n\t{ value: 'HM', label: 'Heard Adası ve McDonald Adaları' },\r\n\t{ value: 'IN', label: 'Hindistan' },\r\n\t{ value: 'IO', label: 'Hint Okyanusu İngiliz Bölgesi' },\r\n\t{ value: 'NL', label: 'Hollanda' },\r\n\t{ value: 'AN', label: 'Hollanda Antilleri' },\r\n\t{ value: 'HN', label: 'Honduras' },\r\n\t{ value: 'HK', label: 'Hong Kong SAR - Çin' },\r\n\t{ value: 'HR', label: 'Hırvatistan' },\r\n\t{ value: 'IQ', label: 'Irak' },\r\n\t{ value: 'VG', label: 'İngiliz Virgin Adaları' },\r\n\t{ value: 'IR', label: 'İran' },\r\n\t{ value: 'IE', label: 'İrlanda' },\r\n\t{ value: 'ES', label: 'İspanya' },\r\n\t{ value: 'IL', label: 'İsrail' },\r\n\t{ value: 'SE', label: 'İsveç' },\r\n\t{ value: 'CH', label: 'İsviçre' },\r\n\t{ value: 'IT', label: 'İtalya' },\r\n\t{ value: 'IS', label: 'İzlanda' },\r\n\t{ value: 'JM', label: 'Jamaika' },\r\n\t{ value: 'JP', label: 'Japonya' },\r\n\t{ value: 'JE', label: 'Jersey' },\r\n\t{ value: 'KH', label: 'Kamboçya' },\r\n\t{ value: 'CM', label: 'Kamerun' },\r\n\t{ value: 'CA', label: 'Kanada' },\r\n\t{ value: 'ME', label: 'Karadağ' },\r\n\t{ value: 'QA', label: 'Katar' },\r\n\t{ value: 'KY', label: 'Kayman Adaları' },\r\n\t{ value: 'KZ', label: 'Kazakistan' },\r\n\t{ value: 'KE', label: 'Kenya' },\r\n\t{ value: 'KI', label: 'Kiribati' },\r\n\t{ value: 'CO', label: 'Kolombiya' },\r\n\t{ value: 'KM', label: 'Komorlar' },\r\n\t{ value: 'CG', label: 'Kongo' },\r\n\t{ value: 'CD', label: 'Kongo Demokratik Cumhuriyeti' },\r\n\t{ value: 'CR', label: 'Kosta Rika' },\r\n\t{ value: 'KW', label: 'Kuveyt' },\r\n\t{ value: 'KP', label: 'Kuzey Kore' },\r\n\t{ value: 'MP', label: 'Kuzey Mariana Adaları' },\r\n\t{ value: 'CU', label: 'Küba' },\r\n\t{ value: 'KG', label: 'Kırgızistan' },\r\n\t{ value: 'LA', label: 'Laos' },\r\n\t{ value: 'LS', label: 'Lesotho' },\r\n\t{ value: 'LV', label: 'Letonya' },\r\n\t{ value: 'LR', label: 'Liberya' },\r\n\t{ value: 'LY', label: 'Libya' },\r\n\t{ value: 'LI', label: 'Liechtenstein' },\r\n\t{ value: 'LT', label: 'Litvanya' },\r\n\t{ value: 'LB', label: 'Lübnan' },\r\n\t{ value: 'LU', label: 'Lüksemburg' },\r\n\t{ value: 'HU', label: 'Macaristan' },\r\n\t{ value: 'MG', label: 'Madagaskar' },\r\n\t{ value: 'MO', label: 'Makao S.A.R. Çin' },\r\n\t{ value: 'MK', label: 'Makedonya' },\r\n\t{ value: 'MW', label: 'Malavi' },\r\n\t{ value: 'MV', label: 'Maldivler' },\r\n\t{ value: 'MY', label: 'Malezya' },\r\n\t{ value: 'ML', label: 'Mali' },\r\n\t{ value: 'MT', label: 'Malta' },\r\n\t{ value: 'IM', label: 'Man Adası' },\r\n\t{ value: 'MH', label: 'Marshall Adaları' },\r\n\t{ value: 'MQ', label: 'Martinik' },\r\n\t{ value: 'MU', label: 'Mauritius' },\r\n\t{ value: 'YT', label: 'Mayotte' },\r\n\t{ value: 'MX', label: 'Meksika' },\r\n\t{ value: 'FM', label: 'Mikronezya Federal Eyaletleri' },\r\n\t{ value: 'MD', label: 'Moldovya Cumhuriyeti' },\r\n\t{ value: 'MC', label: 'Monako' },\r\n\t{ value: 'MS', label: 'Montserrat' },\r\n\t{ value: 'MR', label: 'Moritanya' },\r\n\t{ value: 'MZ', label: 'Mozambik' },\r\n\t{ value: 'MN', label: 'Moğolistan' },\r\n\t{ value: 'MM', label: 'Myanmar' },\r\n\t{ value: 'EG', label: 'Mısır' },\r\n\t{ value: 'NA', label: 'Namibya' },\r\n\t{ value: 'NR', label: 'Nauru' },\r\n\t{ value: 'NP', label: 'Nepal' },\r\n\t{ value: 'NE', label: 'Nijer' },\r\n\t{ value: 'NG', label: 'Nijerya' },\r\n\t{ value: 'NI', label: 'Nikaragua' },\r\n\t{ value: 'NU', label: 'Niue' },\r\n\t{ value: 'NF', label: 'Norfolk Adası' },\r\n\t{ value: 'NO', label: 'Norveç' },\r\n\t{ value: 'CF', label: 'Orta Afrika Cumhuriyeti' },\r\n\t{ value: 'UZ', label: 'Özbekistan' },\r\n\t{ value: 'PK', label: 'Pakistan' },\r\n\t{ value: 'PW', label: 'Palau' },\r\n\t{ value: 'PA', label: 'Panama' },\r\n\t{ value: 'PG', label: 'Papua Yeni Gine' },\r\n\t{ value: 'PY', label: 'Paraguay' },\r\n\t{ value: 'PE', label: 'Peru' },\r\n\t{ value: 'PN', label: 'Pitcairn' },\r\n\t{ value: 'PL', label: 'Polonya' },\r\n\t{ value: 'PT', label: 'Portekiz' },\r\n\t{ value: 'PR', label: 'Porto Riko' },\r\n\t{ value: 'RE', label: 'Reunion' },\r\n\t{ value: 'RO', label: 'Romanya' },\r\n\t{ value: 'RW', label: 'Ruanda' },\r\n\t{ value: 'RU', label: 'Rusya Federasyonu' },\r\n\t{ value: 'SH', label: 'Saint Helena' },\r\n\t{ value: 'KN', label: 'Saint Kitts ve Nevis' },\r\n\t{ value: 'LC', label: 'Saint Lucia' },\r\n\t{ value: 'PM', label: 'Saint Pierre ve Miquelon' },\r\n\t{ value: 'VC', label: 'Saint Vincent ve Grenadinler' },\r\n\t{ value: 'WS', label: 'Samoa' },\r\n\t{ value: 'SM', label: 'San Marino' },\r\n\t{ value: 'ST', label: 'Sao Tome ve Principe' },\r\n\t{ value: 'SN', label: 'Senegal' },\r\n\t{ value: 'SC', label: 'Seyşeller' },\r\n\t{ value: 'SL', label: 'Sierra Leone' },\r\n\t{ value: 'SG', label: 'Singapur' },\r\n\t{ value: 'SK', label: 'Slovakya' },\r\n\t{ value: 'SI', label: 'Slovenya' },\r\n\t{ value: 'SB', label: 'Solomon Adaları' },\r\n\t{ value: 'SO', label: 'Somali' },\r\n\t{ value: 'LK', label: 'Sri Lanka' },\r\n\t{ value: 'SD', label: 'Sudan' },\r\n\t{ value: 'SR', label: 'Surinam' },\r\n\t{ value: 'SY', label: 'Suriye' },\r\n\t{ value: 'SA', label: 'Suudi Arabistan' },\r\n\t{ value: 'SJ', label: 'Svalbard ve Jan Mayen' },\r\n\t{ value: 'SZ', label: 'Svaziland' },\r\n\t{ value: 'RS', label: 'Sırbistan' },\r\n\t{ value: 'CS', label: 'Sırbistan-Karadağ' },\r\n\t{ value: 'CL', label: 'Şili' },\r\n\t{ value: 'TJ', label: 'Tacikistan' },\r\n\t{ value: 'TZ', label: 'Tanzanya' },\r\n\t{ value: 'TH', label: 'Tayland' },\r\n\t{ value: 'TW', label: 'Tayvan' },\r\n\t{ value: 'TG', label: 'Togo' },\r\n\t{ value: 'TK', label: 'Tokelau' },\r\n\t{ value: 'TO', label: 'Tonga' },\r\n\t{ value: 'TT', label: 'Trinidad ve Tobago' },\r\n\t{ value: 'TN', label: 'Tunus' },\r\n\t{ value: 'TC', label: 'Turks ve Caicos Adaları' },\r\n\t{ value: 'TV', label: 'Tuvalu' },\r\n\t{ value: 'TM', label: 'Türkmenistan' },\r\n\t{ value: 'UG', label: 'Uganda' },\r\n\t{ value: 'UA', label: 'Ukrayna' },\r\n\t{ value: 'OM', label: 'Umman' },\r\n\t{ value: 'UY', label: 'Uruguay' },\r\n\t{ value: 'QO', label: 'Uzak Okyanusya' },\r\n\t{ value: 'JO', label: 'Ürdün' },\r\n\t{ value: 'VU', label: 'Vanuatu' },\r\n\t{ value: 'VA', label: 'Vatikan' },\r\n\t{ value: 'VE', label: 'Venezuela' },\r\n\t{ value: 'VN', label: 'Vietnam' },\r\n\t{ value: 'WF', label: 'Wallis ve Futuna' },\r\n\t{ value: 'YE', label: 'Yemen' },\r\n\t{ value: 'NC', label: 'Yeni Kaledonya' },\r\n\t{ value: 'NZ', label: 'Yeni Zelanda' },\r\n\t{ value: 'GR', label: 'Yunanistan' },\r\n\t{ value: 'ZM', label: 'Zambiya' },\r\n\t{ value: 'ZW', label: 'Zimbabve' },\r\n\t]\r\n\r\n\r\n\r\n\r\nconst countryMap = new Map();\r\nexport let countryArray = new Array();\r\nexport function translation() {\r\n\tsendRequestToTranslationApi()\r\n\t.then((array) => {\r\n\t\tarray.sort();\r\n\t})\r\n\t.then(()=>{\r\n\t\tcountryArray.forEach(country=>{\r\n\t\t\t//  console.log(country)\r\n\t\t\t  let option= document.createElement('option');\r\n\t\t\t  option.text=country\r\n\t\t\t\r\n\t\t\t  option.value=country\r\n\t\t\t  let select= document.getElementById(\"countries\");\r\n\t\t\t  select.appendChild(option);\r\n\t\t\t \r\n\t\t  })\r\n})\r\n}\r\n//textToTranslate) => {\r\nconst sendRequestToTranslationApi = (countryList) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t//\tresolve(() => {\r\n\t\t\tfor (const country of countryList) {\r\n\t\t\t\tlet url = translateApiEndpoint + country;\r\n\t\t\t\tfetch(url)\r\n\t\t\t\t\t.then(response => response.json())\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconsole.log(res.text);\r\n\t\t\t\t\t\tcountryMap.set(country, res.text)\r\n\t\t\t\t\t\tcountryArray.push(res.text)\r\n\t\t\t\t\t}).catch(e => alert(e))\r\n\t\t\t}\r\n\r\n\t\t\tresolve(countryArray)\r\n\t\t//})\r\n\t})\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//translation();","import { countryList } from '../static/staticData.js'\r\n\r\nexport function getSummaryData() {\r\n    const result = fetch(\"https://api.covid19api.com/summary\")\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .then((res) => {\r\n            let countryCodes = []\r\n            res.Countries.forEach(country => {\r\n                countryCodes.push(country.CountryCode);\r\n\r\n            })\r\n            return countryCodes;\r\n        }).then((countryCodes) => {\r\n            let availableCountries = []\r\n            countryCodes.forEach((countryCode) => {\r\n                countryList.forEach((countryObject) => {\r\n                    if (countryObject.value === countryCode) {\r\n                        console.log(countryObject);\r\n                        availableCountries.push(countryObject)\r\n                    }\r\n                })\r\n            })\r\n            return availableCountries;\r\n        })\r\n\r\n    return result;\r\n\r\n}\r\nexport async function getCoordinates(countryCode) {\r\n    let result = await fetch(`https://api.covid19api.com/dayone/country/${countryCode}/status/confirmed`)\r\n    let country = await result.json()\r\n    country = await country[0];\r\n    return { \"Lon\": country.Lon, \"Lat\": country.Lat }\r\n\r\n}\r\n\r\nexport  async function getSummaryByCountry(countryCode) {\r\n    \r\n        const coordinates = await getCoordinates(countryCode);\r\n        const country = await fetch(`https://api.covid19api.com/total/country/${countryCode}/status/confirmed`)\r\n        const response = await country.json();\r\n        const countryResult = {\r\n            \"Country\": response[0].Country,\r\n            \"CountryCode\": countryCode,\r\n            \"Lat\": coordinates.Lat,\r\n            \"Lon\": coordinates.Lon,\r\n            \"Cases\": response[response.length - 1].Cases,\r\n            \"Status\": \"confirmed\",\r\n            \"Date\": response[response.length - 1].Date\r\n        }\r\n        return countryResult\r\n}\r\n\r\n\r\nexport default async function summaryData() {\r\n    const result = await fetch(\"https://api.covid19api.com/summary\")\r\n    const json = await result.json();\r\n    const finalResult = await json;\r\n    return finalResult;\r\n}\r\n","\r\nexport function getCurrentDate() {\r\n    let date = new Date();\r\n    let day = date.getDate();\r\n    let month = String(date.getMonth()+1).length ==1 ?`0${date.getMonth()+1}` : date.getMonth()+1;\r\n    let year = date.getFullYear();\r\n    let seconds = date.getSeconds().toString().length ==1 ?`0${date.getSeconds()}` : date.getSeconds();\r\n    let minutes = date.getMinutes().toString().length ==1 ?`0${date.getMinutes()}` : date.getMinutes();\r\n    let hours = date.getHours().toString().length ==1 ?`0${date.getHours()}` : date.getHours();\r\n\r\n   // console.log(`${day}-${month}-${year} ${hours}:${minutes}:${seconds}`)\r\n\r\n    return `${day}-${month}-${year} ${hours}:${minutes}:${seconds}`;\r\n}\r\n","import React from 'react';\r\nimport { getSummaryData } from '../service/MainService.js'\r\nimport { Select } from 'semantic-ui-react'\r\nimport { getCurrentDate } from '../utils/Utility.js'\r\nimport '../App.css';\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchbarArr: [],\r\n            currentDate: ''\r\n        };\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.resultClick = this.resultClick.bind(this);\r\n\r\n    }\r\n    resultClick(event) {\r\n        document.getElementsByName(event.title.toString())[0].scrollIntoView({ behavior: \"smooth\" })\r\n        document.getElementById(\"searchResultsContainer\").innerHTML = ''\r\n    }\r\n\r\n\r\n    handleSearch(event) {\r\n        let totalResult = 0;\r\n        let searchbar = document.getElementById('searchbar')\r\n        let container = document.createElement('div');\r\n        container.id = \"searchResultsContainer\"\r\n        container.style.position = \"relative\"\r\n        container.style.width = \"75%\"\r\n        container.style.display = \"inline-block\"\r\n        container.style.zIndex = \"100\"\r\n        if (document.getElementById(\"searchResults\") != null) {\r\n            document.getElementById(\"searchResultsContainer\").remove()\r\n        }\r\n        let tableElement = document.createElement('table');\r\n        tableElement.id = \"searchResults\"\r\n        tableElement.innerHTML = ''\r\n        container.innerHTML = '';\r\n\r\n        if (this.state.searchbarArr.length >= 1) {\r\n            for (let element of this.state.searchbarArr) {\r\n                if (element[\"label\"].toLowerCase().includes(event.target.value.toLowerCase())) {\r\n                    if (totalResult != 5) {\r\n                        let tableRow = document.createElement('tr');\r\n                        let tableData = document.createElement('td');\r\n                        tableData.id = Math.ceil(Math.random() * 100)\r\n                        tableData.textContent = element.label;\r\n                        tableData.value = element.label;\r\n                        tableData.title = element.value;\r\n                        tableData.onclick = () => { this.resultClick(tableData); }\r\n                        tableRow.appendChild(tableData)\r\n                        tableElement.appendChild(tableRow);\r\n                        container.appendChild(tableElement)\r\n                        searchbar.after(container);\r\n                        totalResult++\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (event.target.value == \"\" || event.target.value == null) {\r\n            container.innerHTML = ''\r\n            while(document.getElementById(\"searchResultsContainer\")!=null){\r\n                document.getElementById(\"searchResultsContainer\").remove()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let currentDate = this.state.currentDate;\r\n        return (\r\n            <div className=\"card-navbar\">\r\n                <div className=\"clock\" >{currentDate}</div>\r\n                <h5 className=\"hashtag\">#evdekal #stayhome</h5>\r\n                <input type=\"text\" className=\"searchbar\" /*onFocus={(event) => this.styleNavbar(event)}*/ placeholder=\"Search Country\" id=\"searchbar\" onChange={this.handleSearch}></input>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getCountriesFunc() {\r\n        const countries = getSummaryData();\r\n        countries.then((countriesData) => {\r\n            const isArrived = setInterval(() => {\r\n                if (countriesData !== undefined) {\r\n\r\n                    let tempArr = []\r\n                    tempArr = [...countriesData]\r\n                    this.setState({\r\n                        searchbarArr: [...tempArr]\r\n                    })\r\n                    clearInterval(isArrived)\r\n                }\r\n            }, 500)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCountriesFunc();\r\n        this.updateDate = setInterval(() => {\r\n            this.setState({ currentDate: getCurrentDate() })\r\n        }, 1000)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.updateDate);\r\n    }\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport ymaps from 'ymaps';\r\nexport class CountryPopup extends React.Component{\r\n  \r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.mapFunc = this.mapFunc.bind(this);\r\n    this.handlePopupContainerClick= this.handlePopupContainerClick.bind(this);\r\n  }\r\n\r\n  handlePopupContainerClick(){\r\n    document.getElementById(\"popupContainer\").style.display=\"none\"\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"outer\" id=\"popupContainer\" onClick={this.handlePopupContainerClick} >\r\n      <div className=\"middle\">\r\n        <div id=\"mapX\" className=\"innerMap\" ></div>\r\n        <div className=\"inner\">\r\n        <h4>Country : {this.props.data.Country}</h4>\r\n        <h4>CountryCode : {this.props.data.CountryCode.toUpperCase()}</h4>\r\n        <h4>Latitude : {this.props.data.Lat}</h4>\r\n        <h4>Longitude : {this.props.data.Lon}</h4>\r\n        <h4>Cases: {this.props.data.Cases}</h4>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n    \r\ncomponentDidMount(){\r\n  this.mapFunc();\r\n}\r\n\r\nmapFunc(){\r\n  let con= document.createElement('div');\r\n  con.id=\"mapY\"\r\n  document.getElementById(\"mapX\").appendChild(con);\r\n  ymaps\r\n  .load()\r\n  .then(maps => {\r\n    const map = new maps.Map(con, {\r\n      center: [this.props.data.Lat, this.props.data.Lon],\r\n      zoom: 6\r\n    });\r\n  })\r\n  .catch(error => console.log('Failed to load Yandex Maps', error));\r\n\r\n}\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport { Card, Image, Grid } from 'semantic-ui-react'\r\nimport 'flag-icon-css/css/flag-icon.css'\r\nimport { countryList } from '../static/staticData';\r\nimport '../App.css'\r\nimport { CountryPopup } from '../components/CountryPopup.js'\r\nimport { getSummaryByCountry } from '../service/MainService.js'\r\n\r\nexport default class CardComponent extends React.Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentCountryCode: null,\r\n      popupData: {\r\n        Log: '',\r\n        Lon: '',\r\n        CountryCode: '',\r\n        Cases:''\r\n\r\n      }\r\n    }\r\n    this.handleCardClick = this.handleCardClick.bind(this);\r\n    this.resetCurrentCountryCode = this.resetCurrentCountryCode.bind(this);\r\n  }\r\n  handleCardClick(event) {\r\n\r\n    event.persist()\r\n\r\n    if (event.target.parentElement.getAttribute(\"value\") != null) {\r\n      this.resetCurrentCountryCode();\r\n      const countryCode = event.target.parentElement.getAttribute(\"value\").toLowerCase();//.attributes.nodeValue\r\n      getSummaryByCountry(countryCode).then((response) => {\r\n        if (response != undefined) {\r\n          this.setState({\r\n            currentCountryCode: response.CountryCode,\r\n            popupData: {\r\n              Lat: response.Lat,\r\n              Lon: response.Lon,\r\n              CountryCode: response.CountryCode,\r\n              Cases:response.Cases,\r\n              Country:response.Country\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n  resetCurrentCountryCode() {\r\n    this.setState({\r\n      currentCountryCode: null\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const cardPerRow = 5;\r\n    const styleCard = {\r\n\r\n      \"width\": \"100px\",\r\n      \"height\": \"60px\",\r\n      \"flag-icon-background\": {\r\n      }\r\n    }\r\n\r\n    let countryList = []\r\n    let lastArray = []\r\n \r\n    if (this.props.cardType == \"countries\") {\r\n      if (this.props.data != null && this.props.data != undefined && this.props.data.length != 0) {\r\n\r\n        let countriesLst = this.props.data[0].map(x => {\r\n          let flagClassName = \"flag-icon flag-icon-\" + x.CountryCode.toLowerCase()\r\n          let cnt =\r\n            <Card key={x.CountryCode} name={x.CountryCode} value={x.CountryCode} id={x.CountryCode}>\r\n              <Card.Content key={x.CountryCode} className=\"cardExample\" name={x.CountryCode} value={x.CountryCode} onClick={this.handleCardClick.bind(this)}>\r\n                <br></br><br></br>\r\n                <span className={flagClassName} style={styleCard}></span>\r\n                <h3 >{x.Country != null || x.Country != undefined ? x.Country : \"Dünya Geneli2\"}</h3>\r\n                <Card.Header style={{ \"fontWeight\": \"bold\" }} >Günlük Vakalar : {x.NewConfirmed}</Card.Header>\r\n                <Card.Description textAlign=\"left\">Toplam Vaka: {x.TotalConfirmed}</Card.Description>\r\n                <Card.Description textAlign=\"left\">Günlük Ölüm: {x.NewDeaths}</Card.Description>\r\n                <Card.Description textAlign=\"left\">Toplam Ölüm: {x.TotalDeaths}</Card.Description>\r\n                <Card.Description textAlign=\"left\">Günlük İyileşenler: {x.NewRecovered}</Card.Description>\r\n                <Card.Description textAlign=\"left\">Tarih: {this.props.date.toString().substring(0, 10)}</Card.Description>\r\n              </Card.Content>\r\n            </Card>\r\n\r\n          countryList.push(cnt)\r\n\r\n        })\r\n\r\n        for (var x = 0; x < countryList.length; x += cardPerRow) {\r\n\r\n          let row = <Grid.Row style={{\"display\": \"inline-flex\"/*,\"transform\": \"scale(0.8, 0.8)\"*/ }}>\r\n            <Grid.Column style={{ \"display\": \"inline-flex\"/*,\"transform\": \"scale(0.8, 0.8)\"*/ }}>\r\n              {countryList.slice(x, Math.min(countryList.length, x + cardPerRow))}\r\n\r\n            </Grid.Column>\r\n          </Grid.Row>;\r\n          lastArray.push(row)\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Grid columns={cardPerRow}>\r\n          {lastArray.map(x => {\r\n            return x;\r\n          })}\r\n        </Grid>\r\n        {\r\n          this.state.currentCountryCode && (\r\n            <div>\r\n              <CountryPopup data={this.state.popupData} className=\"popup\" countryCode={this.state.currentCountryCode} ></CountryPopup>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"DID MOUNT \" + this.state.currentCountryCode)\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    this.state.currentCountryCode = null;\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport summaryData from '../service/MainService.js'\r\nimport CardComponent from './Card.js';\r\nimport Navbar from './Navbar.js';\r\nimport '../App.css';\r\nimport { Container , Grid , Card} from 'semantic-ui-react';\r\n\r\nexport default class PageContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            globalData: [],\r\n            countriesData: [],\r\n            date: [],\r\n            datas: []\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\nreturn (\r\n           <div>\r\n           <Container className=\"App\" className=\"containerApp\" /*style={{ margin: '30px' }}*/>\r\n                <Navbar className=\"card-navbar\"></Navbar>\r\n                <CardComponent className=\"cardComponent\" /*style={{\"display\":\"inline-block\"}}*/ data={this.state.countriesData} date={this.state.date} cardType=\"countries\"></CardComponent>\r\n               </Container>\r\n         </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        const datas = summaryData();\r\n        datas.then((incoming) => {\r\n            const globalData = incoming['Global']\r\n            const countriesData = incoming['Countries']\r\n            const date = incoming['Date']\r\n            this.setState({\r\n                globalData: [...this.state.globalData, globalData],\r\n                countriesData: [...this.state.countriesData, countriesData],\r\n                date: [...this.state.date, date]\r\n            })\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PageContent from './PageContent';\r\n\r\n\r\nexport default class Page extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n       \r\n      }\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                <PageContent/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Page from './components/Page';\n\n\nfunction App() {\n  return (\n    <div className=\"App\"> \n      <div className=\"card-navbar\">\n       <Page/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}